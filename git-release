#!/usr/bin/env node

const cli = require('commander');
const GitHub = require('github-api');
const { prerelease } = require('semver');
const { version } = require('./package');

function isPrerelease(version) {
  return !!prerelease(version);
}

function parseCli(cli, options, argv) {
  options.forEach(option => cli.option(option[0], option[1]));
  cli.parse(argv);
}

parseCli(cli, [
  ['-a --asset <asset>', 'Release asset'],
  ['-t --tag <tag>', 'Release tag']
], process.argv);

const { GH_REF, GH_TOKEN, GIT_USER_NAME } = process.env;
const github = new GitHub({ token: GH_TOKEN });
const name = GH_REF.split('/').pop().replace(/.git/, '');
const repo = github.getRepo(GIT_USER_NAME, name);

repo.createRelease({
  name: cli.tag,
  prerelease: isPrerelease(version),
  tag_name: cli.tag
}, (error, result, request) => {
  if (error) {
    console.error(`Error: ${error}`);
    process.exit(1);
    return;
  }
  process.exit();
}).catch(error => {
  console.error(`Error: ${error}`);
  process.exit(1);
});
